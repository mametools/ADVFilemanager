<#
.SYNOPSIS: Modulo per la generazione di report HTML interattivi per ADVFilemanager.
# Versione: 1.0.0.

function Format-BytesForHtml { param([long]$bytes); if ($bytes -ge 1GB) { return "{0:N2} GB" -f ($bytes / 1GB) } elseif ($bytes -ge 1MB) { return "{0:N2} MB" -f ($bytes / 1MB) } elseif ($bytes -ge 1KB) { return "{0:N0} KB" -f ($bytes / 1KB) } else { return "$bytes B" } }
function Build-FileSystemTree { param( [string]$RootPath, [string[]]$exclude ); $fileTree = @{ '_files' = [System.Collections.Generic.List[pscustomobject]]::new(); '_totalSizeInBytes' = 0; '_comment' = "" }; $allFiles = Get-ChildItem -Path $RootPath -Recurse -File -ErrorAction SilentlyContinue; foreach ($file in $allFiles) { $relativePath = $file.FullName.Substring($RootPath.Length).TrimStart([System.IO.Path]::DirectorySeparatorChar); $pathParts = $relativePath.Split([System.IO.Path]::DirectorySeparatorChar); if ($exclude -and $pathParts[0] -in $exclude) { continue }; $currentNode = $fileTree; for ($i = 0; $i -lt ($pathParts.Length - 1); $i++) { $part = $pathParts[$i]; if (-not $currentNode.ContainsKey($part)) { $currentNode[$part] = @{ '_files' = [System.Collections.Generic.List[pscustomobject]]::new(); '_totalSizeInBytes' = 0; '_comment' = "" } }; $currentNode = $currentNode[$part] }; $fileNode = $pathParts[-1]; $fileObject = [pscustomobject]@{ Name = $fileNode; Size = (Format-BytesForHtml -bytes $file.Length); IsShortcut = ($file.Extension -eq '.lnk'); Comment = ""; Length = $file.Length; FullPath = $file.FullName }; Add-ToVirtualTree -Tree $fileTree -RelativePath $relativePath.Replace($file.Name, "").TrimEnd('\/') -FileObject $fileObject }; return $fileTree }
function Get-HtmlTreeFromData { param( [hashtable]$Node, [string]$CurrentAbsolutePath, [int]$level = 0, [string]$parentRowId = "root" ); $html = ""; $folderKeys = $Node.Keys | Where-Object { $_ -notin @('_totalSizeInBytes', '_comment', '_files') } | Sort-Object; foreach ($key in $folderKeys) { $folderData = $Node[$key]; $folderComment = [System.Web.HttpUtility]::HtmlEncode($folderData._comment); $folderSize = Format-BytesForHtml -bytes $folderData._totalSizeInBytes; $rowId = "node-$(Get-Random -Maximum 99999999)"; $parentClass = if ($parentRowId -ne "root") { "child-of-$parentRowId" } else { "" }; $thisFolderFullPath = Join-Path $CurrentAbsolutePath $key; $html += "<tr class='folder-row $parentClass' data-depth='$level' id='$rowId' onclick='toggleChildren(this)'><td style='padding-left:$($level*25)px'><span class='caret'>▶</span><span class='folder'>📂 $key</span></td><td><strong>$folderSize</strong></td><td>$folderComment</td></tr>`n"; $html += Get-HtmlTreeFromData -Node $folderData -CurrentAbsolutePath $thisFolderFullPath -level ($level + 1) -parentRowId $rowId }; if ($Node.ContainsKey("_files")) { foreach ($f in ($Node["_files"] | Sort-Object -Property Name)) { $icon = if ($f.IsShortcut) { "🔗" } else { "📄" }; $class = if ($f.IsShortcut) { "shortcut" } else { "file" }; $parentClass = if ($parentRowId -ne "root") { "child-of-$parentRowId" } else { "" }; $fileComment = [System.Web.HttpUtility]::HtmlEncode($f.Comment); $fileName = [System.Web.HttpUtility]::HtmlEncode($f.Name); $html += "<tr class='$class file-row $parentClass' data-depth='$($level+1)'><td style='padding-left:$(($level*25)+25)px'>$icon $fileName</td><td>$($f.Size)</td><td>$fileComment</td></tr>`n" } }; return $html }

function New-HtmlReport {
    [CmdletBinding()]
    param(
        [string]$ReportTitle, [string]$OutputFilePath, [hashtable]$Counters,
        [string]$ScriptVersion, [string]$ScriptAuthor, [hashtable]$DataTree,
        [System.Collections.Generic.List[pscustomobject]]$RecentFiles,
        [string]$DestinationPath, [string]$LogDirName, [array]$Conflicts
    )
    Write-Host "Generazione report HTML in '$OutputFilePath'..." -ForegroundColor Green
    $countersTable = ""; $Counters.GetEnumerator() | Sort-Object Name | ForEach-Object { $countersTable += "<tr><td>$($_.Name)</td><td>$($_.Value)</td></tr>" }
    $recentFilesSection = ""; if ($RecentFiles -and $RecentFiles.Count -gt 0) { $recentFilesRows = ""; foreach ($f in ($RecentFiles | Sort-Object LastWriteTime -Descending)) { $relPath = $f.Path; if ($relPath.StartsWith($DestinationPath)) { $relPath = $relPath.Substring($DestinationPath.Length) }; $relPath = [System.Web.HttpUtility]::HtmlEncode($relPath.TrimStart('\/')); $fSize = Format-BytesForHtml -bytes $f.SizeInBytes; $recentFilesRows += "<tr><td>$relPath</td><td>$fSize</td><td>$($f.LastWriteTime.ToString('dd-MM-yyyy HH:mm'))</td></tr>`n" }; $recentFilesSection = "<h2>File Modificati di Recente (Ultimi 30 Giorni)</h2><input type='text' id='recent-search-box' class='search-box' onkeyup=`"searchTable('recent-search-box', 'recent-files-body')`" placeholder='Cerca nei file recenti...'><table class='recent-files-table'><colgroup><col style='width:60%;'><col style='width:15%;'><col style='width:25%;'></colgroup><thead><tr><th class='sortable' onclick=`"sortTable(this, 0, 'string')`">Percorso Relativo<span class='sort-indicator'></span></th><th class='sortable' onclick=`"sortTable(this, 1, 'size')`">Dimensione<span class='sort-indicator'></span></th><th class='sortable' onclick=`"sortTable(this, 2, 'date')`">Data Modifica<span class='sort-indicator'></span></th></tr></thead><tbody id='recent-files-body'>$recentFilesRows</tbody></table>" }
    $conflictsSection = ""; if ($Conflicts -and $Conflicts.Count -gt 0) { $conflictRows = ""; foreach($c in $Conflicts) { $f1 = [System.Web.HttpUtility]::HtmlEncode($c.FileNotMoved); $f2 = [System.Web.HttpUtility]::HtmlEncode($c.AttemptedDestination); $f3 = [System.Web.HttpUtility]::HtmlEncode($c.ConflictingFile); $conflictRows += "<tr><td>$f1</td><td>$f2</td><td>$f3</td></tr>" }; $conflictsSection = "<h2>Conflitti di Riorganizzazione (Azioni Manuali Richieste)</h2><p>I seguenti file non sono stati spostati per evitare di sovrascrivere file esistenti con contenuto diverso.</p><table class='conflicts-table'><thead><tr><th>File Non Spostato</th><th>Destinazione Proposta</th><th>File Esistente in Conflitto</th></tr></thead><tbody>$conflictRows</tbody></table>" }
    $tableBodyHtml = ""; if ($DataTree) { $tableBodyHtml = Get-HtmlTreeFromData -Node $DataTree -CurrentAbsolutePath $DestinationPath } elseif ($DestinationPath -and (Test-Path $DestinationPath)) { Write-Host "Scansione della struttura di destinazione per il report..." -ForegroundColor Cyan; $diskTree = Build-FileSystemTree -RootPath $DestinationPath -exclude $LogDirName; $tableBodyHtml = Get-HtmlTreeFromData -Node $diskTree -CurrentAbsolutePath $DestinationPath }
    $jsPath = Join-Path $PSScriptRoot "ReportLogic.js"; if (-not (Test-Path $jsPath)) { Write-Error "File JavaScript 'ReportLogic.js' non trovato."; return }; $scriptBlock = Get-Content -Path $jsPath -Raw
    $htmlContent = @"
<!DOCTYPE html><html lang="it"><head><meta charset="UTF-8"><title>$ReportTitle</title><style>body{font-family:'Segoe UI',sans-serif;margin:20px;background-color:#f4f4f9;color:#333}.container{max-width:1600px;margin:auto;background:white;padding:25px;border-radius:8px;box-shadow:0 4px 8px rgba(0,0,0,.1)}h1,h2{color:#005a9e;border-bottom:2px solid #005a9e;padding-bottom:5px}h2{color:#c00000}h1+p{margin-bottom:30px}table{width:100%;border-collapse:collapse;margin-top:20px;table-layout:fixed}th,td{padding:8px 12px;border:1px solid #ddd;text-align:left;vertical-align:top;word-wrap:break-word}th{background-color:#005a9e;color:white;position:sticky;top:0}th.sortable{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}th.sortable:hover{background-color:#007acc}th .sort-indicator{float:right;color:#aaddff;font-family:monospace}th.sorted-asc .sort-indicator::after{content:' ▲'}th.sorted-desc .sort-indicator::after{content:' ▼'}th.sorted{background-color:#006ab8}tr.folder-row{cursor:pointer;background-color:#f0f8ff;font-weight:700}tr.folder-row:hover{background-color:#e0f0ff}.folder{color:#005a9e}.shortcut{font-style:italic;color:#555}.caret{display:inline-block;width:1em;transition:transform .2s ease-in-out}.caret-down{transform:rotate(90deg)}.summary-table,.recent-files-table,.conflicts-table{max-width:800px}.search-box{width:98%;max-width:580px;padding:8px;margin-bottom:10px;border:1px solid #ccc;border-radius:4px}.hidden{display:none}.button-bar{margin-top:15px;margin-bottom:10px}footer{text-align:center;margin-top:25px;padding-top:10px;border-top:1px solid #ccc;font-size:.8em;color:#777}</style></head><body><div class="container"><h1>$ReportTitle</h1><p>Generato il: $(Get-Date -Format 'dd-MM-yyyy HH:mm:ss')</p><h2>Riepilogo Operazione</h2><table class="summary-table"><thead><tr><th>Contatore</th><th>Valore</th></tr></thead><tbody>$countersTable</tbody></table>$conflictsSection<h2>Dettaglio Struttura di Destinazione</h2><div class="button-bar"><input type="text" id="main-search-box" class="search-box" onkeyup="searchTable('main-search-box', 'report-body')" placeholder="Cerca nella struttura..."><button onclick="toggleAll('report-body', true)">Espandi Tutto</button><button onclick="toggleAll('report-body', false)">Comprimi Tutto</button></div><table class="report-table"><colgroup><col style="width:60%;"><col style="width:15%;"><col style="width:25%;"></colgroup><thead><tr><th class="sortable" onclick="sortTable(this, 0, 'string')">Nome File / Cartella<span class="sort-indicator"></span></th><th class="sortable" onclick="sortTable(this, 1, 'size')">Dimensione<span class="sort-indicator"></span></th><th class="sortable" onclick="sortTable(this, 2, 'string')">Commento<span class="sort-indicator"></span></th></tr></thead><tbody id="report-body">$tableBodyHtml</tbody></table>$recentFilesSection<footer><p>Report generato da File Organizer v$ScriptVersion<br>Autore: $ScriptAuthor</p></footer></div><script>$scriptBlock</script></body></html>
"@
    try { $null = New-Item -Path (Split-Path $OutputFilePath) -ItemType Directory -Force; $htmlContent | Out-File -FilePath $OutputFilePath -Encoding utf8 -ErrorAction Stop } catch { Write-Error "Impossibile scrivere il file di report HTML in '$OutputFilePath'. Errore: $($_.Exception.Message)" }
}

Export-ModuleMember -Function New-HtmlReport